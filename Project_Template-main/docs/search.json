[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CASA00025 Group Project: Assessing the Impact of the Photovoltaic Heat Island Effect on Fish Farms in Southeastern Taiwan",
    "section": "",
    "text": "Ian I don’t think we are meant to have any text in this section!! Original: In line with Net Zero 2050, the Taiwanese government has implemented an aquavoltaics (fishery–electricity symbiosis) policy in southeastern Taiwan since 2020. This initiative integrates solar panels into fish farms to generate renewable energy. However, concerns have arisen about potential environmental impacts, including the photovoltaic heat island (PVHI) effect. While some research suggests PVHI is minimal or even cooling in some areas (Xu et al., 2024), other studies report significant heat island effects of large solar power plants (Barron-Gafford et al., 2016). This project employs remote sensing (landset8?) and solar panel polygon data, using the XXX method, to assess PVHI impacts and compare conditions before and after policy implementation.\n\n\n\n\n\n\nWhat is the problem you’re trying to address using this application?\nPotential new paragraph? Needs cutting by 13 words Although renewable energy is crucial to meeting Taiwan’s Net Zero goals, land availability represents a critical constraint (Hsiao et al., 2021). To address this, the Taiwanese government has implemented an aquavoltaics programme, integrating solar panels into fish farms to generate space-efficient energy. However, this initiative faces significant local opposition, with some authorities even banning construction due to concerns about socio-environmental impacts such as the photovoltaic heat island effect (PHVI). Academic assessments of PHVI find mixed results (Barron-Gafford et al., 2016; Xu et al., 2024). As such, there is a clear need for an accessible, evidence-based participatory planning tool to resolve local conflicts, overcome planning roadblocks, and provide a foundation for informed programme expansion.\nCerys’s version (96 words) Although renewable energy is crucial to meeting Taiwan’s Net Zero goals, land availability represents a critical constraint (Hsiao et al., 2021). To address this, the Taiwanese government has implemented an aquavoltaics programme, integrating solar panels into fish farms to generate space-efficient energy. However, this initiative faces significant local opposition, with some authorities even banning construction due to concerns about socio-environmental impacts such as the photovoltaic heat island effect (PHVI). There is a clear need for an accessible, evidence-based participatory planning tool to resolve local conflicts, overcome planning roadblocks, and provide a foundation for informed programme expansion.\nIan’s original: The main issue lies in the implementation of the aquavoltaics policy by Taiwan’s central government, which provides subsidies to fish farm landowners willing to install solar panels. However, from the perspective of local governments, the excessive installation of solar panels may lead to environmental concerns. Local residents are also worried about the potential heat island effect. Therefore, this project aims to assess the impact of solar panels on temperature through remote sensing analysis, and to develop a visual tool that allows both government authorities and local communities to better understand the environmental effects after solar panel installation.\n\n\n\nWho are you building this application for? How does it address a need this community has?\nIan’s original: This application is being developed for two key groups: local communities in southeastern Taiwan, particularly fish farm landowners and residents, and government authorities involved in the planning and oversight of aquavoltaics projects. Currently, there is a lack of accessible tools for understanding how solar installations affect local microclimates.\nPotential alternative? Needs cutting by 4 words This application serves as a participatory planning tool to overcome conflicts between stakeholders with opposing perspectives on aquavoltaic expansion. It answers the question: What are the PHVI impacts of past solar farms, and what would the impact be in prospective future sites? Alongside expediting planning, helping mitigate local impacts, and supporting Taiwan’s Net Zero goals, additional benefits for each stakeholder are outlined below:\n\nNational government: communicating policy; mitigating unfounded concerns.\nLocal government: evidence-based assessment of past projects; informed future planning within jurisdictions.\nFish farmers: presenting a case for having solar panels installed on their sites.\nLocal residents: reducing concerns; empowering them to challenge decisions at higher governance levels.\n\nCerys’s version (99 words) This application serves as a participatory planning tool to overcome conflicts between stakeholders with opposing perspectives on aquavoltaic expansion. It seeks to explore the PHVI impacts of past and prospective solar farms sites. Alongside expediting planning, helping mitigate local impacts, and supporting Taiwan’s Net Zero goals, additional benefits for each stakeholder are outlined below:\n\nNational government: communicating policy; mitigating unfounded concerns.\nLocal government: evidence-based assessment of past projects; informed future planning within jurisdictions.\nFish farmers: presenting a case for having solar panels installed on their sites.\nLocal residents: reducing concerns; empowering them to challenge decisions at higher governance levels.\n\n\n\n\nWhat data are you using? 1. Landsat 8 OLI_TIRS imagery at X resolution for temperature change assessments. 2. Sentinel-2 imagery at 10m resolution for fish farm identification. 3. Solar panel polygons and construction dates from the Taiwanese Civil Service.. 4. Population estimates at 30m resolution from Meta’s Data for Good 5. Digital elevation data at 30m resolution from the NASA Shuttle Radar Topography Mission.\n\n\n\nHow are you using this data to address the problem?\nThe application first assesses the PHVI impacts of past solar panel sites before predicting implications of future developments. First, land surface temperature (LST) before and after solar panel installation is calculated using the method detailed by Xu et al., (2024), which XXX. A random forest model uses these changes, alongside optical and thermal imagery, slope, and elevation to predict temperature impacts at other sites. A second random forest identifies fish farms, ensuring users can only select prospective sites which could be included in the programme. Finally, predicted temperature change and local population estimates indicate the impact of developments on local communities.\n\n\n\nHow does your application’s interface work to address the needs of your end user?\nSomeone (probably Ian/Sam) needs to fill this in! Potential points: Colouring panels by temp change: blue -&gt; white -&gt; red: clearly communicates impact Summary statistics and bar chart: clear overview Selecting specific panels, predicting new sites - makes more site specific for a variety of individuals regardless of where they live, enabling them to meet their goals\n\n\n\n\nReplace the link below with the link to your application.\n\n\n\n\n\n\n\nUse this section to explain how your application works using code blocks and text explanations (no more than 500 words excluding code):\n\n\n\n\nJin to add temperature change stuff! Please also mention that we keep NDVI, NBDI, and optical/thermal bands (excluding B8 and B9) for the random forest. Please keep it short - 50ish words maybe?\nGiven local government and resident concerns about PHVI’s impact on surrounding communities, we define a function called popBuffer to sum estimated populations within 730 metres of solar farms: a distance typically affected by PHVI (Guoqing et al., 2021).\n//Load population from Data For Good\nvar HRSL_total = ee.ImageCollection('projects/sat-io/open-datasets/hrsl/hrslpop').filterBounds(taiwan).median();\n\n//Vulnerable population: sum of 0-5 and 60+\nvar HRSL_0_5 = ee.ImageCollection(\"projects/sat-io/open-datasets/hrsl/hrsl_children_under_five\").filterBounds(taiwan).median();\nvar HRSL_60plus = ee.ImageCollection(\"projects/sat-io/open-datasets/hrsl/hrsl_elderly_over_sixty\").filterBounds(taiwan).median();\nvar HRSL_vulnerable = HRSL_0_5.add(HRSL_60plus).rename('HRSL_vulnerable');\n\n//Calculate population within 730m buffer\nfunction popBuffer(panel) {\n  var geom = panel.geometry().buffer(730);\n  var totalPop = ee.Number(HRSL_total.reduceRegion({reducer: ee.Reducer.sum(), geometry: geom, scale: 30, maxPixels: 1e13}).get('b1')).round();\n  var vulnerablePop = ee.Number(HRSL_vulnerable.reduceRegion({reducer: ee.Reducer.sum(), geometry: geom, scale: 30, maxPixels: 1e13}).get('HRSL_vulnerable')).round();\n  return panel.set({'total_buffer_pop': totalPop, 'vulnerable_buffer_pop': vulnerablePop});\n}\nvar all_results = results.map(popBuffer);\nFinally, due to their impact on LST (Šafanda, 1999), we load slope and elevation data and reduce these to the means for each solar polygon. We also calculate polygon areas in hectares squared.\n//Add extra non-Landsat features: elevation, topography, and polygon area\nvar srtm = ee.Image('USGS/SRTMGL1_003').clip(taiwan);\nvar elevation = srtm.select('elevation');\nvar slope = ee.Terrain.slope(srtm);\n\nvar allFeatures = validFeatures.map(function(feature) {\n  var geom = feature.geometry();\n  var meanElevation = elevation.reduceRegion({reducer: ee.Reducer.mean(), geometry: geom, scale: 30, maxPixels: 1e13}).get('elevation');\n  var meanSlope = slope.reduceRegion({reducer: ee.Reducer.mean(), geometry: geom, scale: 30, maxPixels: 1e13}).get('slope');\n  var area = geom.area().divide(10000); //converting to ha^2 as metres were overwhelming the model\n  return feature.set({\n    'elevation': meanElevation,\n    'slope': meanSlope,\n    'area': area});\n});\n\n\n\nAfter filtering all polygons to ensure they contain the necessary data, variables were extracted to conduct principal component analysis in Python to reduce dimensionality and prevent multicollinearity. The resultant random forest model is trained on 70% of the polygons, and has an R^2 of 0.79. It has a low RMSE and MAE relative to the average temperature change, making it suitable for predicting changes in new sites.\n//Extract training data\nvar bands = test.select(['mean_preLST', 'mean_postLST', 'mean_LST_diff', 'NDVI', 'NDBI', 'FV', 'EM', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B10', 'B11', 'elevation', 'slope', 'area'])\n  .randomColumn();\n\n//Define test-train split\nvar split=0.7\nvar training_sample = bands.filter(ee.Filter.lt('random', split));\nvar validation_sample = bands.filter(ee.Filter.gte('random', split));\n\nprint('Sample training feature:', training_sample.first())\n\n//Set up RF\nvar model = ee.Classifier.smileRandomForest(100)\n  .setOutputMode('REGRESSION')\n  .train({\n    features: training_sample,\n    classProperty: 'mean_postLST',\n    //removed mean_preLST, EM, FV due to multicollinearity\n    inputProperties: ['NDVI', 'NDBI', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B10', 'B11', 'elevation', 'slope', 'area']});\nCerys to add brief description of method and code\n118 words (lmk if it needs cutting) Importantly, if users are to select potential sites for aquavoltaic programme expansion, it is imperative that these are actually fish farms. We used a Random Forest model to identify existing fish farms based on Sentinel-2 imagery. The analysis draws from Ballinger’s (2024) informal oil refinery identification application. The model is trained and tested on manually drawn land identification polygons. The resulting prediction data was then exported and uploaded to QGIS where it was manually cleaned. In the prediction tab of the final application, the user’s polygon selection is required to intersect with the fish farm polygons. While the model is not perfectly accurate, it is sufficient in its goal of limiting user input to areas with fish farms.\n\n// pre-process imagery\nvar start='2021-04-14';\nvar end='2025-04-14';\nvar bands = ['B2', 'B3', 'B4','B5','B6','B7','B8', 'B8A','B11','B12'];\n\nvar sentinel = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')\n                  .filter(ee.Filter.date(start, end))\n                  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 10))\n                  .mean()\n                  .select(bands);\n                \nvar s_rgb = {\n  min: 0.0,\n  max: 3000,\n  bands:['B4', 'B3', 'B2'],\n  opacity:1\n};\n\nvar sentinel1 = ee.ImageCollection('COPERNICUS/S1_GRD')\n  .filterBounds(AOI)\n  .filterDate(start, end)\n  .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n  .select('VV')\n  .mean();\n\nvar ndvi=sentinel.normalizedDifference(['B8','B4']).select(['nd'],['ndvi']);\n\nvar ndwi=sentinel.normalizedDifference(['B3','B8']).select(['nd'],['ndwi'])\n\nvar newBands = ee.Image([ndwi,ndvi,sentinel1.rename('S1_VV')]);\n\nvar image=sentinel.addBands(newBands).clip(AOI);\n\n// add AOI and satellite imagery to map\nMap.addLayer(image.clip(AOI), s_rgb, 'Sentinel');\nMap.addLayer(AOI,null,\"AOI\",false);\n\n// select random points from each land type for training/validation\nvar fishfarm_points=ee.FeatureCollection.randomPoints(fishfarms, 3000).map(function(i){\n  return i.set({'class': 0})});\n  \nvar urban_points=ee.FeatureCollection.randomPoints(urban, 1000).map(function(i){\n  return i.set({'class': 1})});\n\n  \nvar river_points=ee.FeatureCollection.randomPoints(rivers, 2000).map(function(i){\n  return i.set({'class': 2})});  \n\nvar sample=ee.FeatureCollection([urban_points,\n                                  fishfarm_points,\n                                  river_points\n                                  ])\n                                  .flatten()\n                                  .randomColumn();\n\n// take samples from image for training and validation   \nvar split=0.7\nvar training_sample = sample.filter(ee.Filter.lt('random', split));\nvar validation_sample = sample.filter(ee.Filter.gte('random', split));\n\nvar training = image.sampleRegions({\n  collection: training_sample,\n  properties: ['class'],\n  scale: 10,\n});\n\nvar validation = image.sampleRegions({\n  collection: validation_sample,\n  properties: ['class'],\n  scale: 10\n});\n\n// create model and run to create predictions\nvar model = ee.Classifier.smileRandomForest(400)\n.train(training, 'class');\n\nvar prediction = image.classify(model);\n\nvar fishfarm_prediction=prediction.updateMask(prediction.eq(0));\n\nMap.addLayer(fishfarm_prediction,{palette:'red'},'Predicted Fish Farms');\n\n// Assess accuracy of model\nvar validated = validation.classify(model);\n\nvar testAccuracy = validated.errorMatrix('class', 'classification');\n\nprint('Confusion Matrix ', testAccuracy);\nprint('Validation overall accuracy: ', testAccuracy.accuracy())\n\n\n\n\nSam and Ian to write - let others know if you need more info on the analysis, e.g. for interactive sections\n\n\n\n\nBallinger, O. (1 January 2024) Refinery Identification [Module content], Building Spatial Applications with Big Data CASA0025, University College London.\nBarron-Gafford, G., Minor, R., Allen, N., Cronin, A., Brooks, A., Pavao-Zuckerman, M. and Macknick, J., 2016. The Photovoltaic Heat Island Effect: Larger solar power plants increase local temperatures. Scientific Reports, 6, p.35070. https://doi.org/10.1038/srep35070\nGuoqing, L., Hernandez, R.R., Blackburn, G.A., Davies, G., Hunt, M., Whyatt, J.D. and Armstrong, A., 2021. Ground-mounted photovoltaic solar parks promote land surface cool islands in arid ecosystems. Renewable and Sustainable Energy Transition, 1, p.100008.\nHsiao, Y.J., Chen, J.L. and Huang, C.T., 2021. What are the challenges and opportunities in implementing Taiwan’s aquavoltaics policy? A roadmap for achieving symbiosis between small-scale aquaculture and photovoltaics. Energy Policy, 153, p.112264.\nŠafanda, J., 1999. Ground surface temperature as a function of slope angle and slope orientation and its effect on the subsurface temperature field. Tectonophysics, 306(3-4), pp.367-375.\nXu, Z., Li, Y., Qin, Y. and Bach, E., 2024. A global assessment of the effects of solar farms on albedo, vegetation, and land surface temperature using remote sensing. Solar Energy, 268, p.112198. https://doi.org/10.1016/j.solener.2023.112198\nMap.setCenter(35.51898, 33.90153, 15);\n\nMap.setOptions(\"satellite\");\n\nvar aoi = ee.Geometry.Point(35.51898, 33.90153).buffer(3000);\nYou can include images:\n\n\n\nPixelwise T-Test, 2018\n\n\nand math: \\[ \\Large t = {\\frac{\\overline{x_1}-\\overline{x_2}} {\\sqrt{\\frac{s^2_1}{n_1} + \\frac{s^2_2}{n_2}}}} \\]"
  },
  {
    "objectID": "index.html#project-summary",
    "href": "index.html#project-summary",
    "title": "CASA00025 Group Project: Assessing the Impact of the Photovoltaic Heat Island Effect on Fish Farms in Southeastern Taiwan",
    "section": "",
    "text": "Ian I don’t think we are meant to have any text in this section!! Original: In line with Net Zero 2050, the Taiwanese government has implemented an aquavoltaics (fishery–electricity symbiosis) policy in southeastern Taiwan since 2020. This initiative integrates solar panels into fish farms to generate renewable energy. However, concerns have arisen about potential environmental impacts, including the photovoltaic heat island (PVHI) effect. While some research suggests PVHI is minimal or even cooling in some areas (Xu et al., 2024), other studies report significant heat island effects of large solar power plants (Barron-Gafford et al., 2016). This project employs remote sensing (landset8?) and solar panel polygon data, using the XXX method, to assess PVHI impacts and compare conditions before and after policy implementation.\n\n\n\n\n\n\nWhat is the problem you’re trying to address using this application?\nPotential new paragraph? Needs cutting by 13 words Although renewable energy is crucial to meeting Taiwan’s Net Zero goals, land availability represents a critical constraint (Hsiao et al., 2021). To address this, the Taiwanese government has implemented an aquavoltaics programme, integrating solar panels into fish farms to generate space-efficient energy. However, this initiative faces significant local opposition, with some authorities even banning construction due to concerns about socio-environmental impacts such as the photovoltaic heat island effect (PHVI). Academic assessments of PHVI find mixed results (Barron-Gafford et al., 2016; Xu et al., 2024). As such, there is a clear need for an accessible, evidence-based participatory planning tool to resolve local conflicts, overcome planning roadblocks, and provide a foundation for informed programme expansion.\nCerys’s version (96 words) Although renewable energy is crucial to meeting Taiwan’s Net Zero goals, land availability represents a critical constraint (Hsiao et al., 2021). To address this, the Taiwanese government has implemented an aquavoltaics programme, integrating solar panels into fish farms to generate space-efficient energy. However, this initiative faces significant local opposition, with some authorities even banning construction due to concerns about socio-environmental impacts such as the photovoltaic heat island effect (PHVI). There is a clear need for an accessible, evidence-based participatory planning tool to resolve local conflicts, overcome planning roadblocks, and provide a foundation for informed programme expansion.\nIan’s original: The main issue lies in the implementation of the aquavoltaics policy by Taiwan’s central government, which provides subsidies to fish farm landowners willing to install solar panels. However, from the perspective of local governments, the excessive installation of solar panels may lead to environmental concerns. Local residents are also worried about the potential heat island effect. Therefore, this project aims to assess the impact of solar panels on temperature through remote sensing analysis, and to develop a visual tool that allows both government authorities and local communities to better understand the environmental effects after solar panel installation.\n\n\n\nWho are you building this application for? How does it address a need this community has?\nIan’s original: This application is being developed for two key groups: local communities in southeastern Taiwan, particularly fish farm landowners and residents, and government authorities involved in the planning and oversight of aquavoltaics projects. Currently, there is a lack of accessible tools for understanding how solar installations affect local microclimates.\nPotential alternative? Needs cutting by 4 words This application serves as a participatory planning tool to overcome conflicts between stakeholders with opposing perspectives on aquavoltaic expansion. It answers the question: What are the PHVI impacts of past solar farms, and what would the impact be in prospective future sites? Alongside expediting planning, helping mitigate local impacts, and supporting Taiwan’s Net Zero goals, additional benefits for each stakeholder are outlined below:\n\nNational government: communicating policy; mitigating unfounded concerns.\nLocal government: evidence-based assessment of past projects; informed future planning within jurisdictions.\nFish farmers: presenting a case for having solar panels installed on their sites.\nLocal residents: reducing concerns; empowering them to challenge decisions at higher governance levels.\n\nCerys’s version (99 words) This application serves as a participatory planning tool to overcome conflicts between stakeholders with opposing perspectives on aquavoltaic expansion. It seeks to explore the PHVI impacts of past and prospective solar farms sites. Alongside expediting planning, helping mitigate local impacts, and supporting Taiwan’s Net Zero goals, additional benefits for each stakeholder are outlined below:\n\nNational government: communicating policy; mitigating unfounded concerns.\nLocal government: evidence-based assessment of past projects; informed future planning within jurisdictions.\nFish farmers: presenting a case for having solar panels installed on their sites.\nLocal residents: reducing concerns; empowering them to challenge decisions at higher governance levels.\n\n\n\n\nWhat data are you using? 1. Landsat 8 OLI_TIRS imagery at X resolution for temperature change assessments. 2. Sentinel-2 imagery at 10m resolution for fish farm identification. 3. Solar panel polygons and construction dates from the Taiwanese Civil Service.. 4. Population estimates at 30m resolution from Meta’s Data for Good 5. Digital elevation data at 30m resolution from the NASA Shuttle Radar Topography Mission.\n\n\n\nHow are you using this data to address the problem?\nThe application first assesses the PHVI impacts of past solar panel sites before predicting implications of future developments. First, land surface temperature (LST) before and after solar panel installation is calculated using the method detailed by Xu et al., (2024), which XXX. A random forest model uses these changes, alongside optical and thermal imagery, slope, and elevation to predict temperature impacts at other sites. A second random forest identifies fish farms, ensuring users can only select prospective sites which could be included in the programme. Finally, predicted temperature change and local population estimates indicate the impact of developments on local communities.\n\n\n\nHow does your application’s interface work to address the needs of your end user?\nSomeone (probably Ian/Sam) needs to fill this in! Potential points: Colouring panels by temp change: blue -&gt; white -&gt; red: clearly communicates impact Summary statistics and bar chart: clear overview Selecting specific panels, predicting new sites - makes more site specific for a variety of individuals regardless of where they live, enabling them to meet their goals"
  },
  {
    "objectID": "index.html#the-application",
    "href": "index.html#the-application",
    "title": "CASA00025 Group Project: Assessing the Impact of the Photovoltaic Heat Island Effect on Fish Farms in Southeastern Taiwan",
    "section": "",
    "text": "Replace the link below with the link to your application."
  },
  {
    "objectID": "index.html#how-it-works",
    "href": "index.html#how-it-works",
    "title": "CASA00025 Group Project: Assessing the Impact of the Photovoltaic Heat Island Effect on Fish Farms in Southeastern Taiwan",
    "section": "",
    "text": "Use this section to explain how your application works using code blocks and text explanations (no more than 500 words excluding code):\n\n\n\n\nJin to add temperature change stuff! Please also mention that we keep NDVI, NBDI, and optical/thermal bands (excluding B8 and B9) for the random forest. Please keep it short - 50ish words maybe?\nGiven local government and resident concerns about PHVI’s impact on surrounding communities, we define a function called popBuffer to sum estimated populations within 730 metres of solar farms: a distance typically affected by PHVI (Guoqing et al., 2021).\n//Load population from Data For Good\nvar HRSL_total = ee.ImageCollection('projects/sat-io/open-datasets/hrsl/hrslpop').filterBounds(taiwan).median();\n\n//Vulnerable population: sum of 0-5 and 60+\nvar HRSL_0_5 = ee.ImageCollection(\"projects/sat-io/open-datasets/hrsl/hrsl_children_under_five\").filterBounds(taiwan).median();\nvar HRSL_60plus = ee.ImageCollection(\"projects/sat-io/open-datasets/hrsl/hrsl_elderly_over_sixty\").filterBounds(taiwan).median();\nvar HRSL_vulnerable = HRSL_0_5.add(HRSL_60plus).rename('HRSL_vulnerable');\n\n//Calculate population within 730m buffer\nfunction popBuffer(panel) {\n  var geom = panel.geometry().buffer(730);\n  var totalPop = ee.Number(HRSL_total.reduceRegion({reducer: ee.Reducer.sum(), geometry: geom, scale: 30, maxPixels: 1e13}).get('b1')).round();\n  var vulnerablePop = ee.Number(HRSL_vulnerable.reduceRegion({reducer: ee.Reducer.sum(), geometry: geom, scale: 30, maxPixels: 1e13}).get('HRSL_vulnerable')).round();\n  return panel.set({'total_buffer_pop': totalPop, 'vulnerable_buffer_pop': vulnerablePop});\n}\nvar all_results = results.map(popBuffer);\nFinally, due to their impact on LST (Šafanda, 1999), we load slope and elevation data and reduce these to the means for each solar polygon. We also calculate polygon areas in hectares squared.\n//Add extra non-Landsat features: elevation, topography, and polygon area\nvar srtm = ee.Image('USGS/SRTMGL1_003').clip(taiwan);\nvar elevation = srtm.select('elevation');\nvar slope = ee.Terrain.slope(srtm);\n\nvar allFeatures = validFeatures.map(function(feature) {\n  var geom = feature.geometry();\n  var meanElevation = elevation.reduceRegion({reducer: ee.Reducer.mean(), geometry: geom, scale: 30, maxPixels: 1e13}).get('elevation');\n  var meanSlope = slope.reduceRegion({reducer: ee.Reducer.mean(), geometry: geom, scale: 30, maxPixels: 1e13}).get('slope');\n  var area = geom.area().divide(10000); //converting to ha^2 as metres were overwhelming the model\n  return feature.set({\n    'elevation': meanElevation,\n    'slope': meanSlope,\n    'area': area});\n});\n\n\n\nAfter filtering all polygons to ensure they contain the necessary data, variables were extracted to conduct principal component analysis in Python to reduce dimensionality and prevent multicollinearity. The resultant random forest model is trained on 70% of the polygons, and has an R^2 of 0.79. It has a low RMSE and MAE relative to the average temperature change, making it suitable for predicting changes in new sites.\n//Extract training data\nvar bands = test.select(['mean_preLST', 'mean_postLST', 'mean_LST_diff', 'NDVI', 'NDBI', 'FV', 'EM', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B10', 'B11', 'elevation', 'slope', 'area'])\n  .randomColumn();\n\n//Define test-train split\nvar split=0.7\nvar training_sample = bands.filter(ee.Filter.lt('random', split));\nvar validation_sample = bands.filter(ee.Filter.gte('random', split));\n\nprint('Sample training feature:', training_sample.first())\n\n//Set up RF\nvar model = ee.Classifier.smileRandomForest(100)\n  .setOutputMode('REGRESSION')\n  .train({\n    features: training_sample,\n    classProperty: 'mean_postLST',\n    //removed mean_preLST, EM, FV due to multicollinearity\n    inputProperties: ['NDVI', 'NDBI', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B10', 'B11', 'elevation', 'slope', 'area']});\nCerys to add brief description of method and code\n118 words (lmk if it needs cutting) Importantly, if users are to select potential sites for aquavoltaic programme expansion, it is imperative that these are actually fish farms. We used a Random Forest model to identify existing fish farms based on Sentinel-2 imagery. The analysis draws from Ballinger’s (2024) informal oil refinery identification application. The model is trained and tested on manually drawn land identification polygons. The resulting prediction data was then exported and uploaded to QGIS where it was manually cleaned. In the prediction tab of the final application, the user’s polygon selection is required to intersect with the fish farm polygons. While the model is not perfectly accurate, it is sufficient in its goal of limiting user input to areas with fish farms.\n\n// pre-process imagery\nvar start='2021-04-14';\nvar end='2025-04-14';\nvar bands = ['B2', 'B3', 'B4','B5','B6','B7','B8', 'B8A','B11','B12'];\n\nvar sentinel = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')\n                  .filter(ee.Filter.date(start, end))\n                  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 10))\n                  .mean()\n                  .select(bands);\n                \nvar s_rgb = {\n  min: 0.0,\n  max: 3000,\n  bands:['B4', 'B3', 'B2'],\n  opacity:1\n};\n\nvar sentinel1 = ee.ImageCollection('COPERNICUS/S1_GRD')\n  .filterBounds(AOI)\n  .filterDate(start, end)\n  .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n  .select('VV')\n  .mean();\n\nvar ndvi=sentinel.normalizedDifference(['B8','B4']).select(['nd'],['ndvi']);\n\nvar ndwi=sentinel.normalizedDifference(['B3','B8']).select(['nd'],['ndwi'])\n\nvar newBands = ee.Image([ndwi,ndvi,sentinel1.rename('S1_VV')]);\n\nvar image=sentinel.addBands(newBands).clip(AOI);\n\n// add AOI and satellite imagery to map\nMap.addLayer(image.clip(AOI), s_rgb, 'Sentinel');\nMap.addLayer(AOI,null,\"AOI\",false);\n\n// select random points from each land type for training/validation\nvar fishfarm_points=ee.FeatureCollection.randomPoints(fishfarms, 3000).map(function(i){\n  return i.set({'class': 0})});\n  \nvar urban_points=ee.FeatureCollection.randomPoints(urban, 1000).map(function(i){\n  return i.set({'class': 1})});\n\n  \nvar river_points=ee.FeatureCollection.randomPoints(rivers, 2000).map(function(i){\n  return i.set({'class': 2})});  \n\nvar sample=ee.FeatureCollection([urban_points,\n                                  fishfarm_points,\n                                  river_points\n                                  ])\n                                  .flatten()\n                                  .randomColumn();\n\n// take samples from image for training and validation   \nvar split=0.7\nvar training_sample = sample.filter(ee.Filter.lt('random', split));\nvar validation_sample = sample.filter(ee.Filter.gte('random', split));\n\nvar training = image.sampleRegions({\n  collection: training_sample,\n  properties: ['class'],\n  scale: 10,\n});\n\nvar validation = image.sampleRegions({\n  collection: validation_sample,\n  properties: ['class'],\n  scale: 10\n});\n\n// create model and run to create predictions\nvar model = ee.Classifier.smileRandomForest(400)\n.train(training, 'class');\n\nvar prediction = image.classify(model);\n\nvar fishfarm_prediction=prediction.updateMask(prediction.eq(0));\n\nMap.addLayer(fishfarm_prediction,{palette:'red'},'Predicted Fish Farms');\n\n// Assess accuracy of model\nvar validated = validation.classify(model);\n\nvar testAccuracy = validated.errorMatrix('class', 'classification');\n\nprint('Confusion Matrix ', testAccuracy);\nprint('Validation overall accuracy: ', testAccuracy.accuracy())\n\n\n\n\nSam and Ian to write - let others know if you need more info on the analysis, e.g. for interactive sections"
  },
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "",
    "section": "",
    "text": "Use this repository to host a website for your CASA0025 final project by following these stpes:\n\nclone this repository\ninstall quarto\nedit the ‘index.qmd’ file with the contents of your project\nusing terminal, navigate to the project directory and run “quarto render”\npush the changes to your github repository\non github, navigate to Settings&gt;Pages&gt;Build and Deployment. Make sure that under “Source” it says “deploy from branch”. Under “Branch”, select “Main” in the first dropdown and “Docs” under the second drop down. Then press “Save”\n\nYour website should now be available under https://{your_username}.github.io/{your_repo_name}"
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "CASA00025 Group Project: Assessing the Impact of the Photovoltaic Heat Island Effect on Fish Farms in Southeastern Taiwan",
    "section": "",
    "text": "Ballinger, O. (1 January 2024) Refinery Identification [Module content], Building Spatial Applications with Big Data CASA0025, University College London.\nBarron-Gafford, G., Minor, R., Allen, N., Cronin, A., Brooks, A., Pavao-Zuckerman, M. and Macknick, J., 2016. The Photovoltaic Heat Island Effect: Larger solar power plants increase local temperatures. Scientific Reports, 6, p.35070. https://doi.org/10.1038/srep35070\nGuoqing, L., Hernandez, R.R., Blackburn, G.A., Davies, G., Hunt, M., Whyatt, J.D. and Armstrong, A., 2021. Ground-mounted photovoltaic solar parks promote land surface cool islands in arid ecosystems. Renewable and Sustainable Energy Transition, 1, p.100008.\nHsiao, Y.J., Chen, J.L. and Huang, C.T., 2021. What are the challenges and opportunities in implementing Taiwan’s aquavoltaics policy? A roadmap for achieving symbiosis between small-scale aquaculture and photovoltaics. Energy Policy, 153, p.112264.\nŠafanda, J., 1999. Ground surface temperature as a function of slope angle and slope orientation and its effect on the subsurface temperature field. Tectonophysics, 306(3-4), pp.367-375.\nXu, Z., Li, Y., Qin, Y. and Bach, E., 2024. A global assessment of the effects of solar farms on albedo, vegetation, and land surface temperature using remote sensing. Solar Energy, 268, p.112198. https://doi.org/10.1016/j.solener.2023.112198\nMap.setCenter(35.51898, 33.90153, 15);\n\nMap.setOptions(\"satellite\");\n\nvar aoi = ee.Geometry.Point(35.51898, 33.90153).buffer(3000);\nYou can include images:\n\n\n\nPixelwise T-Test, 2018\n\n\nand math: \\[ \\Large t = {\\frac{\\overline{x_1}-\\overline{x_2}} {\\sqrt{\\frac{s^2_1}{n_1} + \\frac{s^2_2}{n_2}}}} \\]"
  }
]